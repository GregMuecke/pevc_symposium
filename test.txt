   
   The site, on all pages
     ✓ should be using Boostrap CSS
     ✓ should have a header element
     ✓ should have a footer element
     ✓ should have a link to /about in the footer
     ✓ should have a link to / in the footer
   
   The home page
     ✓ should be up and running
     ✓ should have your team logo
     ✓ should have a list of events
     ✓ should have a time tag for each event
     ✓ should have a link for each event
     ✓ should not show events that are over
     ✓ should have a link to create a new event
   
   The API
     ✓ should return an array of upcoming events in JSON format
     ✓ should allow for searching events by title
   
   The about page
     ✓ should have people on it
     ✓ should have a picture of each person
   
   The event detail pages
     ✓ should exist for each event and should have title, image, etc
     ✓ should allow Yale users to RSVP
     ✓ should reject RSVPs from Yale addresses
   
   The new event creation page
     ✓ should exist
     ✓ should have a form that can be posted back
     ✓ should have appropriate form fields and labels
   
   The form for creating new events
     1) should display errors to the user when the year is not an integer
     2) should display errors to the user when the year is more than 2016
     3) should display errors to the user when the year is less than 2015
     4) should display errors to the user when the month is not an integer
     5) should display errors to the user when the month is more than 11
     6) should display errors to the user when the month is less than 0
     7) should display errors to the user when the day is not an integer
     8) should display errors to the user when the day is more than 31
     9) should display errors to the user when the day is less than 1
     10) should display errors to the user when the hour is not an integer
     11) should display errors to the user when the hour is more than 23
     12) should display errors to the user when the hour is less than 0
     13) should display errors to the user when the image is not a gif or png
     14) should display errors to the user when the image is not a URL
     15) should display errors to the user when the location is too long
     16) should display errors to the user when the location is empty
     17) should display errors to the user when the title is too long
     18) should display errors to the user when the title is empty
     ✓ should redirect the user to the event detail page if the form is valid

   Executed 41 tests in 7 suites in 11s 745ms
       23 passes
       18 failed
   
   18) The form for creating new events should display errors to the user when the title is empty
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   17) The form for creating new events should display errors to the user when the title is too long
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   16) The form for creating new events should display errors to the user when the location is empty
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   15) The form for creating new events should display errors to the user when the location is too long
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   14) The form for creating new events should display errors to the user when the image is not a URL
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   13) The form for creating new events should display errors to the user when the image is not a gif or png
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   12) The form for creating new events should display errors to the user when the hour is less than 0
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   11) The form for creating new events should display errors to the user when the hour is more than 23
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   10) The form for creating new events should display errors to the user when the hour is not an integer
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   9) The form for creating new events should display errors to the user when the day is less than 1
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   8) The form for creating new events should display errors to the user when the day is more than 31
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   7) The form for creating new events should display errors to the user when the day is not an integer
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   6) The form for creating new events should display errors to the user when the month is less than 0
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   5) The form for creating new events should display errors to the user when the month is more than 11
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   4) The form for creating new events should display errors to the user when the month is not an integer
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   3) The form for creating new events should display errors to the user when the year is less than 2015
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   2) The form for creating new events should display errors to the user when the year is more than 2016
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
   
   1) The form for creating new events should display errors to the user when the year is not an integer
   
       Cannot read property 'document' of undefined
       
       at Request._callback (test/test.js:432:25)
       
       431 |         var window = jsdom.jsdom(body).parentWindow;
       432 |         assert.ok(window.document.getElementsByClassName('form-errors'), 'Error page should contain form errors.');
       433 |         done();
       
       at Request.self.callback (node_modules/request/request.js:198:22)
       
       197 |       self._callbackCalled = true
       198 |       self._callback.apply(self, arguments)
       199 |     }
       
       at Request.<anonymous> (node_modules/request/request.js:1082:10)
       
       1081 |     }
       1082 |     self.emit('complete', response, response.body)
       1083 |   })
       
       at IncomingMessage.<anonymous> (node_modules/request/request.js:1009:12)
       
       1008 |     responseContent.on('end', function (chunk) {
       1009 |       self.emit('end', chunk)
       1010 |     })
       
       at endReadableNT (_stream_readable.js:893:12)
